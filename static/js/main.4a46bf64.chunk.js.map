{"version":3,"sources":["utils/helperFunction.ts","store/app-selector.tsx","pages/Doctor.tsx","pages/Doctors.tsx","routes/Routes.tsx","mock-fetch.tsx","store/app-reducer.ts","components/ErrorSnackBar.tsx","App.tsx","api.ts","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["fulConversionDate","date","Date","toLocaleDateString","replaceAll","selectorStatus","state","app","status","selectorError","error","selectorEmployees","Employees","selectorWorkLogData","workLogData","Doctor","token","useParams","doctor","useSelector","find","doc","id","Number","WorkLogs","UserWorkLogs","filter","log","employee_id","rows","map","enterTime","from","outTime","to","outErrorIds","React","useMemo","reduce","acc","userLog","length","push","getAutErrorIds","className","lastName","firstName","middleName","TableContainer","component","Paper","elevation","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","selected","includes","scope","Doctors","alphabetTableRows","sort","a","b","localeCompare","FIO","birthDate","PATH","DOCTOR","DOCTORS","Routes","path","exact","render","data","phone","mockFetch","url","val","Promise","res","rej","setTimeout","initialState","setAppStatus","type","setAppError","setEmployees","employees","Alert","props","variant","ErrorSnackbar","dispatch","useDispatch","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","App","useEffect","LinearProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"0SAMaA,EAAoB,SAACC,GAC9B,MAAM,GAAN,OAAU,IAAIC,KAAKD,GAAME,mBAAmB,SAASC,WAAW,IAAK,KAArE,YAA6E,IAC7EF,KAAKD,GAAME,mBAAmB,SAASC,WAAW,IAAK,OCJ9CC,EAAiB,SAACC,GAAD,OAAgDA,EAAMC,IAAIC,QAC3EC,EAAgB,SAACH,GAAD,OAA4CA,EAAMC,IAAIG,OACtEC,EAAoB,SAACL,GAAD,OAAkDA,EAAMC,IAAIK,WAChFC,EAAsB,SAACP,GAAD,OAAqDA,EAAMC,IAAIO,a,OCQrFC,EAAS,WAAO,IAElBC,EAASC,cAATD,MAEDE,EADUC,YAAYR,GACmBS,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOC,OAAOP,MACzEQ,EAAWL,YAAYN,GACvBY,EAAeD,EAASE,QAAO,SAACC,GAAD,OAASA,EAAIC,cAAgBL,OAAOP,MAMzE,IAAMa,EAAOJ,EAAaK,KAAI,SAACH,GAAD,OAJLL,EAKLK,EAAIL,GALaS,EAKT/B,EAAkB2B,EAAIK,MALMC,EAKCjC,EAAkB2B,EAAIO,IAJpE,CAACZ,KAAIS,YAAWE,WAD3B,IAAyBX,EAAYS,EAAmBE,KAOlDE,EAAcC,IAAMC,SAAQ,kBFnBR,SAACZ,EAAsCD,GACjE,OAAOC,EAAaa,QAAO,SAACC,EAAoBC,GAO5C,OANoBhB,EAASE,QAAO,SAACC,GAAD,OAChC,IAAIzB,KAAKsC,EAAQN,IAAM,IAAIhC,KAAKyB,EAAIK,OAAS,IAAI9B,KAAKsC,EAAQN,IAAM,IAAIhC,KAAKyB,EAAIO,OAChFO,OACa,GACdF,EAAIG,KAAKF,EAAQlB,IAEdiB,IACR,IEUqCI,CAAelB,EAAcD,KAAW,CAACA,EAAUC,IAE3F,OACI,sBAAKmB,UAAU,MAAf,UACI,oCAAO1B,GAAM,kBAAeA,EAAO2B,SAAtB,YAAkC3B,EAAO4B,UAAzC,YAAsD5B,EAAO6B,YAA1E,OACA,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAAOC,UAAW,EAA7C,SACI,eAACC,EAAA,EAAD,CAAOC,aAAW,eAAlB,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,uBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,0BAIR,cAACC,EAAA,EAAD,UACK7B,EAAKC,KAAI,SAAC6B,GAAD,OACN,eAACJ,EAAA,EAAD,CAAuBK,SAAUzB,EAAY0B,SAASF,EAAIrC,IAA1D,UAEI,cAACkC,EAAA,EAAD,CAAWC,MAAM,SAASK,MAAM,MAAhC,SACKH,EAAIrC,KAET,cAACkC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BE,EAAI5B,YAC/B,cAACyB,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BE,EAAI1B,YANpB0B,EAAIrC,kBChClCyC,EAAU,WAQnB,IAAMC,EANU7C,YAAYR,GAMMsD,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAErB,SAASuB,cAAcD,EAAEtB,aACvEf,KAAI,SAACT,GAAD,OALgBC,EAKSD,EAAIC,GALD+C,EAKJ,UAAYhD,EAAIwB,SAAhB,YAA4BxB,EAAIyB,UAAhC,YAA6CzB,EAAI0B,YHtBvD9C,EGsBoFoB,EAAIiD,UALjEA,EHhB3C,IAAIpE,KAAKD,GAAME,mBAAmB,SAASC,WAAW,IAAK,KGiBvD,CAACkB,KAAI+C,MAAKC,aADrB,IAAyBhD,EAAY+C,EAAaC,EHjBvBrE,KGwB3B,OAEI,qBAAK2C,UAAU,MAAf,SACI,cAACI,EAAA,EAAD,CAAgBC,UAAWC,IAAOC,UAAW,EAA7C,SACI,eAACC,EAAA,EAAD,CAAOC,aAAW,eAAlB,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,gBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,gCACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,4FAIR,cAACC,EAAA,EAAD,UACKM,EAAkBlC,KAAI,SAAC6B,GAAD,OACnB,eAACJ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,MAAM,SAASK,MAAM,MAAhC,SACKH,EAAIrC,KAET,cAACkC,EAAA,EAAD,CACIC,MAAM,SADV,SACmB,cAAC,IAAD,CACfvB,GAAE,UAAKqC,EAAKC,OAAV,YAAoBb,EAAIrC,IADX,SACkBqC,EAAIU,QACzC,cAACb,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BE,EAAIW,cAPpBX,EAAIrC,iBCpClCiD,EAAO,CAChBC,OAAQ,UACRC,QAAS,YAGAC,EAAS,WAElB,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAU3C,GAAIqC,EAAKE,aACzD,cAAC,IAAD,CAAOE,KAAI,UAAKJ,EAAKC,OAAV,WAA2BK,OAAQ,kBAAM,cAAC,EAAD,OACpD,cAAC,IAAD,CAAOF,KAAMJ,EAAKC,OAAQK,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOF,KAAMJ,EAAKE,QAASI,OAAQ,kBAAM,cAAC,EAAD,a,iCC4SnDC,EAAO,CACT,iBA/Tc,CACd,CACIxD,GAAI,EACJwB,UAAW,uCACXD,SAAU,uFACVE,WAAY,+DACZuB,UAAW,aACXS,MAAO,gBAEX,CACIzD,GAAI,EACJwB,UAAW,mDACXD,SAAU,6CACVE,WAAY,mDACZuB,UAAW,aACXS,MAAO,gBAEX,CACIzD,GAAI,EACJwB,UAAW,uCACXD,SAAU,mDACVE,WAAY,uFACZuB,UAAW,aACXS,MAAO,gBAEX,CACIzD,GAAI,EACJwB,UAAW,iCACXD,SAAU,+DACVE,WAAY,+DACZuB,UAAW,aACXS,MAAO,gBAEX,CACIzD,GAAI,EACJwB,UAAW,mDACXD,SAAU,2BACVE,WAAY,2DACZuB,UAAW,aACXS,MAAO,gBAEX,CACIzD,GAAI,EACJwB,UAAW,yDACXD,SAAU,6CACVE,WAAY,6CACZuB,UAAW,aACXS,MAAO,gBAiRX,yBA7QY,CACZ,CACIzD,GAAI,EACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,EACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,EACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,EACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,EACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,EACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,EACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,EACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,EACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI,uBAER,CACIZ,GAAI,GACJM,YAAa,EACbI,KAAM,sBACNE,GAAI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","file":"static/js/main.4a46bf64.chunk.js","sourcesContent":["import {WorkLogDataType} from \"../store/app-reducer\";\n\nexport const conversionDate = (date: string) => {\n    return new Date(date).toLocaleDateString('en-GB').replaceAll(\"/\", \".\")\n}\n\nexport const fulConversionDate = (date: string) => {\n    return `${new Date(date).toLocaleDateString('en-GB').replaceAll(\"/\", \".\")} ${new\n    Date(date).toLocaleDateString('en-GB').replaceAll(\"/\", \":\")}`\n}\n\nexport const getAutErrorIds = (UserWorkLogs: Array<WorkLogDataType>, WorkLogs: Array<WorkLogDataType>) => {\n    return UserWorkLogs.reduce((acc: Array<number>, userLog) => {\n        const employeesIn = WorkLogs.filter((log) =>\n            new Date(userLog.to) > new Date(log.from) && new Date(userLog.to) < new Date(log.to))\n            .length\n        if (employeesIn < 3) {\n            acc.push(userLog.id)\n        }\n        return acc\n    }, [])\n}","import {AppRootStateType} from \"./store\";\nimport {EmployeeType, RequestStatusType, WorkLogDataType} from \"./app-reducer\";\n\n\nexport const selectorStatus = (state: AppRootStateType): RequestStatusType => state.app.status\nexport const selectorError = (state: AppRootStateType): string | null => state.app.error\nexport const selectorEmployees = (state: AppRootStateType): Array<EmployeeType> => state.app.Employees\nexport const selectorWorkLogData = (state: AppRootStateType): Array<WorkLogDataType> => state.app.workLogData\n","import React from 'react'\nimport {useParams} from 'react-router-dom'\nimport {EmployeeType} from \"../store/app-reducer\";\nimport {useSelector} from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {fulConversionDate, getAutErrorIds} from \"../utils/helperFunction\";\nimport {selectorEmployees, selectorWorkLogData} from \"../store/app-selector\";\n\n\nexport const Doctor = () => {\n\n    const {token} = useParams<{ token: string }>()\n    const doctors = useSelector(selectorEmployees)\n    const doctor: EmployeeType|undefined = doctors.find((doc) => doc.id === Number(token))\n    const WorkLogs = useSelector(selectorWorkLogData)\n    const UserWorkLogs = WorkLogs.filter((log) => log.employee_id === Number(token))\n\n    function createTableData(id: number, enterTime: string, outTime: string) {\n        return {id, enterTime, outTime};\n    }\n\n    const rows = UserWorkLogs.map((log) =>\n        createTableData(log.id, fulConversionDate(log.from), fulConversionDate(log.to)))\n\n    const outErrorIds = React.useMemo(() => getAutErrorIds(UserWorkLogs, WorkLogs), [WorkLogs, UserWorkLogs])\n\n    return (\n        <div className=\"App\">\n            <div> {doctor && `Doctor: ${doctor.lastName} ${doctor.firstName} ${doctor.middleName}`} </div>\n            <TableContainer component={Paper} elevation={3}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Log ID</TableCell>\n                            <TableCell align=\"center\">time from</TableCell>\n                            <TableCell align=\"center\">time to</TableCell>\n\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => (\n                            <TableRow key={row.id} selected={outErrorIds.includes(row.id)}>\n\n                                <TableCell align=\"center\" scope=\"row\">\n                                    {row.id}\n                                </TableCell>\n                                <TableCell align=\"center\">{row.enterTime}</TableCell>\n                                <TableCell align=\"center\">{row.outTime}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}","import React from 'react'\nimport {useSelector} from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"../routes/Routes\";\nimport {conversionDate} from \"../utils/helperFunction\";\nimport {selectorEmployees} from \"../store/app-selector\";\n\n\nexport const Doctors = () => {\n\n    const doctors = useSelector(selectorEmployees)\n\n    function createTableData(id: number, FIO: string, birthDate: string) {\n        return {id, FIO, birthDate};\n    }\n\n    const alphabetTableRows = doctors.sort((a, b) => a.lastName.localeCompare(b.lastName))\n        .map((doc) => createTableData(doc.id, `${doc.lastName} ${doc.firstName} ${doc.middleName}`, conversionDate(doc.birthDate)))\n\n    return (\n\n        <div className=\"App\">\n            <TableContainer component={Paper} elevation={3}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">ID</TableCell>\n                            <TableCell align=\"center\">ФИО</TableCell>\n                            <TableCell align=\"center\">Дата рождения</TableCell>\n\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {alphabetTableRows.map((row) => (\n                            <TableRow key={row.id}>\n                                <TableCell align=\"center\" scope=\"row\">\n                                    {row.id}\n                                </TableCell>\n                                <TableCell\n                                    align=\"center\"><NavLink\n                                    to={`${PATH.DOCTOR}/${row.id}`}>{row.FIO}</NavLink></TableCell>\n                                <TableCell align=\"center\">{row.birthDate}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n","import React from 'react'\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport {Doctor} from \"../pages/Doctor\";\nimport {Doctors} from \"../pages/Doctors\";\n\nexport const PATH = {\n    DOCTOR: \"/doctor\",\n    DOCTORS: \"/doctors\",\n}\n\nexport const Routes = () => {\n\n    return (\n        <div>\n            <Switch>\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.DOCTORS}/>}/>\n                <Route path={`${PATH.DOCTOR}/:token`} render={() => <Doctor/>}/>\n                <Route path={PATH.DOCTOR} render={() => <Doctor/>}/>\n                <Route path={PATH.DOCTORS} render={() => <Doctors/>}/>\n            </Switch>\n        </div>\n    )\n}","const employees = [\n    {\n        id: 1,\n        firstName: \"Леонид\",\n        lastName: \"Старокадомский\",\n        middleName: \"Михайлович\",\n        birthDate: \"1875-03-27\",\n        phone: \"+79975669545\"\n    },\n    {\n        id: 2,\n        firstName: \"Владимир\",\n        lastName: \"Демихов\",\n        middleName: \"Петрович\",\n        birthDate: \"1916-06-18\",\n        phone: \"+74951263366\"\n    },\n    {\n        id: 3,\n        firstName: \"Виктор\",\n        lastName: \"Калнберз\",\n        middleName: \"Константинович\",\n        birthDate: \"1928-06-02\",\n        phone: \"+37156698963\"\n    },\n    {\n        id: 4,\n        firstName: \"Алоис\",\n        lastName: \"Альцгеймер\",\n        middleName: \"Эдуардович\",\n        birthDate: \"1864-06-14\",\n        phone: \"+15559665599\"\n    },\n    {\n        id: 5,\n        firstName: \"Авиценна\",\n        lastName: \"Сина\",\n        middleName: \"Абу Али Ибн\",\n        birthDate: \"1980-08-23\",\n        phone: \"+15559171855\"\n    },\n    {\n        id: 6,\n        firstName: \"Александр\",\n        lastName: \"Флеминг\",\n        middleName: \"Хугович\",\n        birthDate: \"1881-08-06\",\n        phone: \"+4569988569\"\n    }\n];\n\nconst worklog = [\n    {\n        id: 1,\n        employee_id: 1,\n        from: \"2021-03-04 04:44:44\",\n        to: \"2021-03-04 06:46:09\"\n    },\n    {\n        id: 2,\n        employee_id: 1,\n        from: \"2021-03-04 06:55:01\",\n        to: \"2021-03-04 08:13:10\"\n    },\n    {\n        id: 3,\n        employee_id: 1,\n        from: \"2021-03-04 09:11:45\",\n        to: \"2021-03-04 10:55:34\"\n    },\n    {\n        id: 4,\n        employee_id: 1,\n        from: \"2021-03-04 11:31:54\",\n        to: \"2021-03-04 13:36:34\"\n    },\n    {\n        id: 5,\n        employee_id: 1,\n        from: \"2021-03-04 14:40:52\",\n        to: \"2021-03-04 21:31:27\"\n    },\n    {\n        id: 6,\n        employee_id: 1,\n        from: \"2021-03-04 21:32:16\",\n        to: \"2021-03-04 22:13:47\"\n    },\n    {\n        id: 7,\n        employee_id: 1,\n        from: \"2021-03-04 22:44:21\",\n        to: \"2021-03-04 22:47:15\"\n    },\n    {\n        id: 8,\n        employee_id: 1,\n        from: \"2021-03-04 23:27:07\",\n        to: \"2021-03-04 23:41:45\"\n    },\n    {\n        id: 9,\n        employee_id: 1,\n        from: \"2021-03-04 23:41:54\",\n        to: \"2021-03-04 23:44:51\"\n    },\n    {\n        id: 10,\n        employee_id: 1,\n        from: \"2021-03-04 23:53:00\",\n        to: \"2021-04-04 01:15:22\"\n    },\n    {\n        id: 11,\n        employee_id: 2,\n        from: \"2021-03-04 03:44:44\",\n        to: \"2021-03-04 03:46:09\"\n    },\n    {\n        id: 12,\n        employee_id: 2,\n        from: \"2021-03-04 03:55:01\",\n        to: \"2021-03-04 08:13:10\"\n    },\n    {\n        id: 13,\n        employee_id: 2,\n        from: \"2021-03-04 09:11:43\",\n        to: \"2021-03-04 10:55:37\"\n    },\n    {\n        id: 14,\n        employee_id: 2,\n        from: \"2021-03-04 10:56:54\",\n        to: \"2021-03-04 13:36:34\"\n    },\n    {\n        id: 15,\n        employee_id: 2,\n        from: \"2021-03-04 13:40:52\",\n        to: \"2021-03-04 15:31:27\"\n    },\n    {\n        id: 16,\n        employee_id: 2,\n        from: \"2021-03-04 15:32:16\",\n        to: \"2021-03-04 16:13:47\"\n    },\n    {\n        id: 17,\n        employee_id: 3,\n        from: \"2021-03-04 00:00:16\",\n        to: \"2021-03-04 12:00:47\"\n    },\n    {\n        id: 18,\n        employee_id: 3,\n        from: \"2021-03-04 12:33:56\",\n        to: \"2021-03-04 20:11:11\"\n    },\n    {\n        id: 19,\n        employee_id: 4,\n        from: \"2021-03-04 00:12:12\",\n        to: \"2021-03-04 04:07:09\"\n    },\n    {\n        id: 20,\n        employee_id: 4,\n        from: \"2021-03-04 06:33:25\",\n        to: \"2021-03-04 08:56:12\"\n    },\n    {\n        id: 21,\n        employee_id: 4,\n        from: \"2021-03-04 09:02:45\",\n        to: \"2021-03-04 10:11:11\"\n    },\n    {\n        id: 22,\n        employee_id: 4,\n        from: \"2021-03-04 11:12:10\",\n        to: \"2021-03-04 13:36:34\"\n    },\n    {\n        id: 23,\n        employee_id: 4,\n        from: \"2021-03-04 13:16:52\",\n        to: \"2021-03-04 14:31:27\"\n    },\n    {\n        id: 24,\n        employee_id: 4,\n        from: \"2021-03-04 16:32:16\",\n        to: \"2021-03-04 19:13:59\"\n    },\n    {\n        id: 25,\n        employee_id: 4,\n        from: \"2021-03-04 19:44:21\",\n        to: \"2021-03-04 22:54:15\"\n    },\n    {\n        id: 26,\n        employee_id: 4,\n        from: \"2021-03-04 23:27:19\",\n        to: \"2021-03-04 23:41:30\"\n    },\n    {\n        id: 27,\n        employee_id: 5,\n        from: \"2021-03-04 11:12:12\",\n        to: \"2021-03-04 12:07:09\"\n    },\n    {\n        id: 28,\n        employee_id: 5,\n        from: \"2021-03-04 12:32:25\",\n        to: \"2021-03-04 12:56:13\"\n    },\n    {\n        id: 29,\n        employee_id: 5,\n        from: \"2021-03-04 14:02:17\",\n        to: \"2021-03-04 14:11:08\"\n    },\n    {\n        id: 30,\n        employee_id: 5,\n        from: \"2021-03-04 15:12:19\",\n        to: \"2021-03-04 16:33:33\"\n    },\n    {\n        id: 31,\n        employee_id: 5,\n        from: \"2021-03-04 18:25:52\",\n        to: \"2021-03-04 20:31:12\"\n    },\n    {\n        id: 32,\n        employee_id: 5,\n        from: \"2021-03-04 20:32:20\",\n        to: \"2021-03-04 21:21:21\"\n    },\n    {\n        id: 33,\n        employee_id: 5,\n        from: \"2021-03-04 22:44:21\",\n        to: \"2021-03-04 22:54:15\"\n    },\n    {\n        id: 34,\n        employee_id: 5,\n        from: \"2021-03-04 22:59:19\",\n        to: \"2021-03-04 23:29:30\"\n    },\n    {\n        id: 35,\n        employee_id: 6,\n        from: \"2021-03-04 02:15:44\",\n        to: \"2021-03-04 04:46:09\"\n    },\n    {\n        id: 36,\n        employee_id: 6,\n        from: \"2021-03-04 17:26:01\",\n        to: \"2021-03-04 08:17:10\"\n    },\n    {\n        id: 37,\n        employee_id: 6,\n        from: \"2021-03-04 09:29:45\",\n        to: \"2021-03-04 11:32:34\"\n    },\n    {\n        id: 38,\n        employee_id: 6,\n        from: \"2021-03-04 11:39:07\",\n        to: \"2021-03-04 13:39:07\"\n    },\n    {\n        id: 39,\n        employee_id: 6,\n        from: \"2021-03-04 14:15:52\",\n        to: \"2021-03-04 19:01:08\"\n    },\n    {\n        id: 40,\n        employee_id: 6,\n        from: \"2021-03-04 19:32:47\",\n        to: \"2021-03-04 20:55:47\"\n    },\n    {\n        id: 41,\n        employee_id: 6,\n        from: \"2021-03-04 22:59:00\",\n        to: \"2021-03-04 23:09:15\"\n    },\n    {\n        id: 42,\n        employee_id: 6,\n        from: \"2021-03-04 23:27:05\",\n        to: \"2021-03-04 23:30:45\"\n    },\n    {\n        id: 43,\n        employee_id: 6,\n        from: \"2021-03-04 23:30:54\",\n        to: \"2021-03-04 23:50:01\"\n    },\n    {\n        id: 44,\n        employee_id: 6,\n        from: \"2021-04-04 00:53:00\",\n        to: \"2021-04-04 04:15:22\"\n    }\n];\n\nconst data = {\n    \"/api/employees\": employees,\n    \"/api/employees/worklog\": worklog\n};\n\n\nfunction delay(val: string) {\n    return new Promise((res, rej) => setTimeout(val ? res : rej, 500, val));\n}\n\nexport function mockFetch(url: string) {\n\n    // @ts-ignore\n    const payload = data[url];\n\n    return delay(payload);\n}\n","import {Dispatch} from \"redux\";\nimport {getEmployees, getWorklog} from \"../api\";\n\nconst initialState: AppInitialStateType = {\n    status: 'succeeded',\n    error: null,\n    Employees: [] as Array<EmployeeType>,\n    workLogData: [] as Array<WorkLogDataType>\n}\n\nexport const appReducer = (state: AppInitialStateType = initialState, action: ActionsType): AppInitialStateType => {\n    switch (action.type) {\n        case 'APP/SET_STATUS':\n            return {...state, status: action.status}\n        case 'APP/SET_ERROR':\n            return {...state, error: action.error}\n        case \"APP/SET_EMPLOYEES\":\n            return {...state, Employees: action.employees}\n        case \"APP/SET_WORKLOG\":\n            return {...state, workLogData: action.workLogData}\n        default:\n            return state\n    }\n}\n\nexport const setAppStatus = (status: RequestStatusType) =>\n    ({type: 'APP/SET_STATUS', status} as const)\nexport const setAppError = (error: string | null) =>\n    ({type: 'APP/SET_ERROR', error} as const)\nexport const setEmployees = (employees: Array<EmployeeType>) => ({type: 'APP/SET_EMPLOYEES', employees} as const)\nexport const setWorkLog = (workLogData: Array<WorkLogDataType>) => ({type: 'APP/SET_WORKLOG', workLogData} as const)\n\nexport const getDoctors = () => async (dispatch: Dispatch) => {\n    try {\n        dispatch(setAppStatus('loading'))\n        const res = await getEmployees() as Array<EmployeeType>\n        dispatch(setAppStatus('succeeded'))\n        dispatch(setEmployees(res))\n\n    } catch (e) {\n        dispatch(setAppStatus('succeeded'))\n        dispatch(setAppError(\"Error from response\"))\n    }\n}\nexport const getWorkLogs = () => async (dispatch: Dispatch) => {\n    try {\n        dispatch(setAppStatus('loading'))\n        const res = await getWorklog() as Array<WorkLogDataType>\n        dispatch(setAppStatus('succeeded'))\n        dispatch(setWorkLog(res))\n\n    } catch (e) {\n        dispatch(setAppStatus('succeeded'))\n        dispatch(setAppError(\"Error from response\"))\n    }\n}\n\nexport type RequestStatusType = 'succeeded' | 'loading'\n\nexport type AppInitialStateType = {\n    status: RequestStatusType,\n    error: null | string,\n    Employees: Array<EmployeeType>,\n    workLogData: Array<WorkLogDataType>\n}\n\nexport type EmployeeType = {\n    id: number,\n    firstName: string,\n    lastName: string,\n    middleName: string,\n    birthDate: string,\n    phone: string\n}\nexport type WorkLogDataType = {\n    id: number\n    employee_id: number,\n    from: string,\n    to: string\n}\n\ntype ActionsType =\n    ReturnType<typeof setAppStatus> |\n    ReturnType<typeof setAppError> |\n    ReturnType<typeof setEmployees> |\n    ReturnType<typeof setWorkLog>\n\n\n\n\n\n\n\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setAppError} from \"../store/app-reducer\";\nimport {selectorError} from \"../store/app-selector\";\n\n\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport function ErrorSnackbar() {\n\n    const error = useSelector(selectorError)\n    const dispatch = useDispatch()\n\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        dispatch(setAppError(null))\n    };\n\n    return (\n        <Snackbar open={true} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n                {error}\n            </Alert>\n        </Snackbar>\n    );\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {BrowserRouter as Router, HashRouter} from \"react-router-dom\"\nimport {Routes} from \"./routes/Routes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getDoctors, getWorkLogs} from \"./store/app-reducer\";\nimport {ErrorSnackbar} from \"./components/ErrorSnackBar\";\nimport {selectorError, selectorStatus} from \"./store/app-selector\";\n\n\nfunction App() {\n    const dispatch = useDispatch()\n    const status = useSelector(selectorStatus)\n    const error = useSelector(selectorError)\n\n    useEffect(() => {\n        dispatch(getWorkLogs())\n        dispatch(getDoctors())\n    }, [dispatch])\n\n    return (<HashRouter>\n            <div className=\"App\">\n                {error !== null && <ErrorSnackbar/>}\n                {status === 'loading' && <LinearProgress/>}\n                <Routes/>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import { mockFetch } from \"./mock-fetch\";\n\nexport function getEmployees() {\n    return mockFetch(\"/api/employees\");\n}\n\nexport function getWorklog() {\n    return mockFetch(\"/api/employees/worklog\");\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport {appReducer} from \"./app-reducer\";\n\n\nconst rootReducer = combineReducers({\n    app:appReducer,\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}